{"version":3,"sources":["components/Section/Section.module.css","components/SubmitForm/SubmitForm.module.css","components/Container/Container.module.css","components/Button/Button.module.css","components/List/List.module.css","components/FilterContacts/FilterContacts.module.css","components/Container/Container.js","components/Section/Section.js","components/Button/Button.js","redux/selectors.js","redux/actions.js","redux/operation.js","components/SubmitForm/SubmitForm.js","components/List/List.js","components/FilterContacts/FilterContacts.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","Button","buttonName","onDelete","button","type","onClick","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","SubmitForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onSubmit","evt","preventDefault","find","el","toast","warn","id","uuidv4","post","then","data","catch","error","addContact","label","pattern","required","placeholder","value","onChange","e","target","List","useEffect","a","get","length","map","list","contactId","delete","FilterContacts","contactsActions","App","createReducer","_","payload","loading","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2146d700.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"move-background\":\"Section_move-background__3P-dh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SubmitForm_label__3zy06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3ccy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"FilterContacts_filter__2UHY5\"};","import s from \"./Container.module.css\";\nimport PropTypes from \"prop-types\";\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Button({ buttonName, onDelete }) {\n  return (\n    <button className={s.button} type=\"submit\" onClick={onDelete}>\n      {buttonName}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n\nexport default Button;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  },\n);\n\n\n","//import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n//import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from \"./types\";\n\n// const addContact = createAction(ADD_CONTACT, (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction(DELETE_CONTACT);\n\n// const changeFilter = createAction(FILTER_CONTACT);\n\n// const contactsActions = { addContact, deleteContact, changeFilter };\n// export default contactsActions;\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n\n  // axios\n  //   .get('/todos')\n  //   .then(({ data }) => dispatch(fetchTodosSuccess(data)))\n  //   .catch(error => dispatch(fetchTodosError(error)));\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    id: uuidv4(),\n    name,\n    number    \n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n\nexport { fetchContacts, addContact, deleteContact };","import { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Button from \"../Button/Button\";\nimport s from \"./SubmitForm.module.css\";\nimport { useState } from \"react\";\nimport { getItems } from \"../../redux/selectors\";\nimport {addContact} from \"../../redux/operation\";\n\nexport default function SubmitForm() {\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n  const handleChangeNumber = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (contacts.find((el) => el.name === name)) {\n      const notify = () => toast.warn(`${name} is already in contacts!`);\n      return notify();\n    }\n    dispatch(addContact(name, number));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <Button buttonName=\"Add contact\" />\n    </form>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./List.module.css\";\nimport Button from \"../Button\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\nimport { fetchContacts, deleteContact } from '../../redux/operation';\n\n\nfunction List() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      { contacts.length > 0 &&\n        contacts.map((el) => {\n        return (\n          <li className={s.list} key={el.id}>\n            {el.name}: {el.number}\n            <Button\n              buttonName=\"Delete\"\n              onDelete={() => dispatch(deleteContact(el.id))}\n            ></Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default List;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./FilterContacts.module.css\";\nimport { getFilter } from \"../../redux/selectors\";\nimport * as contactsActions from \"../../redux/actions\";\n\nconst FilterContacts = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterName = (e) => {\n    dispatch(contactsActions.changeFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <h2>Find contacts by name</h2>\n      <input\n        className={s.filter}\n        type=\"text\"\n        placeholder=\"Enter name\"\n        value={filter}\n        name={filter}\n        onChange={handleFilterName}\n      />\n    </div>\n  );\n};\n\nexport default FilterContacts;\n","import \"./App.css\";\nimport Container from \"./components/Container/\";\nimport Section from \"./components/Section\";\nimport SubmitForm from \"./components/SubmitForm\";\nimport List from \"./components/List\";\nimport FilterContacts from \"./components/FilterContacts\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function App() {\n  return (\n    <>\n      <ToastContainer />\n      <Container>\n        <Section title=\"Phonebook\">\n          <SubmitForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContacts />\n          <List />\n        </Section>\n      </Container>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import contactsActions from \"./actions\";\n\n// const items = createReducer([], {\n//   [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n//   [contactsActions.deleteContact]: (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n// });\n\n// const filter = createReducer(\"\", {\n//   [contactsActions.changeFilter]: (_, { payload }) => payload,\n// });\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n\nimport {\n  changeFilter,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './actions';\n\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./reducer\";\n\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n//export const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}